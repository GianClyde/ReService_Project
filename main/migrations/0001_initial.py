# Generated by Django 4.2 on 2023-05-14 03:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('contact_no', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_driver', models.BooleanField(default=False)),
                ('is_franchise', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('STUDENT', 'Student'), ('DRIVER', 'Driver'), ('FRANCHISE', 'Franchise')], default='ADMIN', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('acct_no', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('balance', models.FloatField(default=0.0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('content', models.TextField(max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driverprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('lot', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('age', models.IntegerField(null=True)),
                ('school_branch', models.CharField(choices=[('afpovai', 'AFPOVAI'), ('bayani rd', 'Bayani Rd')], default='bayani rd', max_length=100)),
                ('liscense_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Franchise',
            fields=[
                ('franchise_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('franchise_name', models.CharField(max_length=100)),
                ('franchise_no', models.CharField(max_length=100)),
                ('operator_lastN', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_middleN', models.CharField(blank=True, max_length=100, null=True)),
                ('operator_firstN', models.CharField(blank=True, max_length=100, null=True)),
                ('franchise_status', models.CharField(choices=[('APPROVED', 'Approved'), ('DECLINED', 'Declined'), ('PENDING', 'pending')], default='PENDING', max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('valid_id', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('franchise_doc', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('contact_no', models.CharField(blank=True, max_length=13, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_contactNo', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_address', models.CharField(blank=True, max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('lot', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('age', models.IntegerField(null=True)),
                ('school_branch', models.CharField(choices=[('afpovai', 'AFPOVAI'), ('bayani rd', 'Bayani Rd')], default='bayani rd', max_length=100)),
                ('section', models.CharField(blank=True, max_length=100, null=True)),
                ('year_level', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('reservation_status', models.CharField(choices=[('PENDING', 'pending'), ('SUCCESSFULL', 'successfull'), ('DECLINED', 'declined'), ('FORCANCELATION', 'for cancelation')], default='PENDING', max_length=100)),
                ('payment_status', models.CharField(choices=[('PENDING', 'pending'), ('PAID', 'paid')], default='PENDING', max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('valid_until', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.driverprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('franchise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.franchise')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleUpdateRequest',
            fields=[
                ('update_req', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('model', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('plate_no', models.CharField(max_length=10)),
                ('capacity', models.IntegerField(default=0)),
                ('included', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('retirement_reason', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('DECLINED', 'Declined'), ('PENDING', 'pending')], default='PENDING', max_length=100)),
                ('OR', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('CR', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleRequest',
            fields=[
                ('vehicle_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('model', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('plate_no', models.CharField(max_length=10)),
                ('capacity', models.IntegerField(default=0)),
                ('included', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('retirement_reason', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('DECLINED', 'Declined'), ('PENDING', 'pending')], default='PENDING', max_length=100)),
                ('OR', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('CR', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('franchise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.franchise')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.vehiclerequest'),
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('service_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('price', models.FloatField(default=0)),
                ('pick_up', models.CharField(max_length=100, null=True)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('DECLINED', 'Declined'), ('PENDING', 'pending')], default='PENDING', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.driverprofile')),
                ('franchise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.franchise')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday_start', models.TimeField(null=True)),
                ('mondy_dismiss', models.TimeField(null=True)),
                ('monday_pickUp', models.TimeField(null=True)),
                ('tuesday_start', models.TimeField(null=True)),
                ('tuesday_dismiss', models.TimeField(null=True)),
                ('tuesday_pickUp', models.TimeField(null=True)),
                ('wednesday_start', models.TimeField(null=True)),
                ('wednesday_dismiss', models.TimeField(null=True)),
                ('wednesday_pickUp', models.TimeField(null=True)),
                ('thursday_start', models.TimeField(null=True)),
                ('thursday_dismiss', models.TimeField(null=True)),
                ('thursday_pickUp', models.TimeField(null=True)),
                ('friday_start', models.TimeField(null=True)),
                ('friday_dismiss', models.TimeField(null=True)),
                ('friday_pickUp', models.TimeField(null=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationCancelation',
            fields=[
                ('cancelation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('reason', models.TextField(max_length=500)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('DECLINED', 'Declined'), ('PENDING', 'pending')], default='PENDING', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.reservation')),
            ],
        ),
        migrations.AddField(
            model_name='reservation',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.services'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('ref_no', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('SUCCESSFULL', 'Successfull'), ('FAILED', 'Failed'), ('PENDING', 'pending'), ('null', ' ')], default='null', max_length=20)),
                ('total', models.FloatField(null=True)),
                ('proof', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created', models.DateField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.accounts')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.reservation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FranchiseDrivers',
            fields=[
                ('driver_code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('driver_last_name', models.CharField(max_length=100)),
                ('driver_first_name', models.CharField(max_length=100)),
                ('driver_middle_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('DECLINED', 'Declined'), ('PENDING', 'pending')], default='PENDING', max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('id_pic', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('nbi_clearance', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('liscense', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=13, null=True)),
                ('driver', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('franchise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.franchise')),
                ('vehicle', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='DriverStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.profile')),
            ],
        ),
        migrations.AddField(
            model_name='driverprofile',
            name='franchise',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.franchise'),
        ),
        migrations.AddField(
            model_name='driverprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='driverprofile',
            name='vehicle',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.vehicle'),
        ),
        migrations.CreateModel(
            name='DriverFeedback',
            fields=[
                ('rep_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('rate', models.IntegerField(default=0)),
                ('evaluation', models.TextField(null=True)),
                ('concern', models.TextField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.driverprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
        ),
    ]
